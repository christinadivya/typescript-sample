openapi: 3.0.1
info:
  title: typescript-auth
  description: ""
  version: 1.0.0
servers:
  - url: /api
tags:
  - name: Customer
    description: Operations about customer
paths:
  /customers/sign-up:
    post:
      summary: To create a new customer via mobile
      tags:
        - Customer
      description: Signing up by the customer through mobile app.
      operationId: create-customer-mobile
      parameters:
        - $ref: "#/components/parameters/app_language"
        - $ref: "#/components/parameters/app_version"
      requestBody:
        description: Create Customer Request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomer"
            examples:
              create-customer:
                $ref: "#/components/examples/CreateCustomer"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              examples:
                new provider:
                  $ref: "#/components/examples/CreateCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-codegen-request-body-name: body
  /customers:
    put:
      summary: To edit a customer
      tags:
        - Customer
      description: Provider can edit the customer.
      operationId: edit-customer
      parameters:
        - $ref: "#/components/parameters/app_language"
        - $ref: "#/components/parameters/app_version"
      requestBody:
        description: Edit Customer Request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditCustomer"
            examples:
              edit-customer-provider:
                $ref: "#/components/examples/EditCustomer"
              edit-customer-mobile:
                $ref: "#/components/examples/EditCustomer"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              examples:
                new provider:
                  $ref: "#/components/examples/EditCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-codegen-request-body-name: body
      security:
        - Authorization: []
    get:
      summary: To get the customer details
      tags:
        - Customer
      description: To get the customer details
      operationId: get-customer-detail
      parameters:
        - $ref: "#/components/parameters/app_language"
        - $ref: "#/components/parameters/app_version"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              examples:
                Get_Customer_Response:
                  $ref: "#/components/examples/getCustomerResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-codegen-request-body-name: body
      security:
        - Authorization: []
components:
  parameters:
    app_language:
      in: header
      name: app-language
      required: true
      description: app language
      schema:
        type: string
        example: en
    app_version:
      in: header
      name: app_version
      required: true
      description: app version
      schema:
        type: number
        example: "1"
    sortBy:
      name: "sortBy"
      in: "query"
      description: "Select the sort order (Ex:DESC)"
      schema:
        type: "string"
        enum: [DESC, ASC]
        example: DESC
    sortField:
      name: "sortField"
      in: "query"
      description: "enter the sort order (Ex:created_at)"
      schema:
        type: "string"
        example: created_at
    page:
      name: page
      in: "query"
      description: "Mention the page number (Ex:10)"
      required: true
      schema:
        type: number
        example: 1
    limit:
      name: limit
      in: "query"
      description: "Mention the limit should display per page (Ex:10)"
      required: true
      schema:
        type: number
        example: 10
  securitySchemes:
    Authorization:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Error:
      type: object
      required:
        - statusCode
        - message
      properties:
        statusCode:
          type: number
        message:
          type: string
    ValidationError:
      required:
        - message
      properties:
        message:
          type: object
          required:
            - name
            - message
            - statusCode
            - error
            - details
          properties:
            name:
              type: string
              description: ValidationError
            message:
              type: string
              description: Validation Failed
            statusCode:
              type: number
              description: This will be 422 for this type of error
            error:
              type: string
              description: Bad Request
            details:
              type: array
              items:
                type: string
                description: Validation failed fields will return
        stack:
          type: string
          description: Error stack will return
    CreateCustomer:
      allOf:
        - type: object
          properties:
            first_name:
              type: string
              description: First name of the customer.Length of this field can be upto 150 characters.
            last_name:
              type: string
              description: Last name of the customer.Length of this field can be upto 150 characters.
            password:
              type: string
              description: The customer can create their password which should be in encrypted form.
            email:
              type: object
              properties:
                email:
                  type: string
                  description: It should be valid email address.
    EditCustomer:
      allOf:
        - type: object
          properties:
            id:
              type: number
            first_name:
              type: string
              description: First name of the customer.Length of this field can be upto 150 characters.
            last_name:
              type: string
              description: Last name of the customer.Length of this field can be upto 150 characters.
            email:
              type: object
              properties:
                email:
                  type: string
                  description: It should be valid email address.
  examples:
    CreateCustomer:
      value:
        first_name: Test
        last_name: User
        password: U2FsdGVkX19SDg8x1KfPIOIQ7jUyy7415gRbq5qyUl8=
        email:
          email: U2FsdGVkX18Xgw8Obtmw2JrnxznJjUe3e8XINPbZKgBMTlAkvYSMpuSeszWbNUt/
    EditCustomer:
      value:
        first_name: Test
        last_name: User
        email:
          email: U2FsdGVkX18Xgw8Obtmw2JrnxznJjUe3e8XINPbZKgBMTlAkvYSMpuSeszWbNUt/
    CreateCustomerResponse:
      value:
        result:
          - message: "Sign up successfully"
            id: 1
            account_id: 261a7680-343a-4f4c-af2d-8102b4ad69ad
            email: test1@yopmail.com
            token: b6c09c83afbc382aa84a5e754319a781d3dbb49c
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
              - type: object
                properties:
                  statusCode:
                    type: number
                    example: 404
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
              - type: object
                properties:
                  statusCode:
                    type: number
                    example: 401
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
              - type: object
                properties:
                  statusCode:
                    type: number
                    example: 400
    UnprocessableEntity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
              - type: object
                properties:
                  statusCode:
                    type: number
                    example: 422
    TooManyRequests:
      description: Too many Requests
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
              - type: object
                properties:
                  statusCode:
                    type: number
                    example: 429
