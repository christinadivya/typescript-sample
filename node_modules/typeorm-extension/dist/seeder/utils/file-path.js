"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildFilePathname = exports.resolveFilePaths = exports.resolveFilePatterns = void 0;
const locter_1 = require("locter");
const path_1 = __importDefault(require("path"));
async function resolveFilePatterns(filesPattern, root) {
    return (0, locter_1.locateMany)(filesPattern, {
        ...(root ? { path: root } : {}),
        ignore: ['**/*.d.ts'],
    }).then(buildFilePathname);
}
exports.resolveFilePatterns = resolveFilePatterns;
function resolveFilePaths(filePaths, root) {
    return filePaths.map((filePath) => (path_1.default.isAbsolute(filePath) ?
        filePath :
        path_1.default.resolve(root || process.cwd(), filePath)));
}
exports.resolveFilePaths = resolveFilePaths;
/**
 * Exported only for testing purposes
 */
function buildFilePathname(files) {
    return (
    // sorting by name so that we can define the order of execution using file names
    files.sort((a, b) => (a.name > b.name ? 1 : -1)).map((el) => path_1.default.join(el.path, el.name + el.extension)));
}
exports.buildFilePathname = buildFilePathname;
